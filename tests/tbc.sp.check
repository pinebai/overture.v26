<<square5/square/std//dirichlet>>                                                               : err = 0.0e+00
<<square5/square/std//neumann>>                                                                 : err = 0.0e+00
<<square5/square/std//mixed (var-coeff)>>                                                       : err = 0.0e+00
<<square5/square/std//mixed1>>                                                                  : err = 0.0e+00
<<square5/square/std//mixed2>>                                                                  : err = 0.0e+00
<<square5/square/con//normalDotScalarGrad>>                                                     : err = 0.0e+00
<<square5/square/std//normalDotScalarGrad>>                                                     : err = 0.0e+00
<<square5/square/std//normalComponent>>                                                         : err = 0.0e+00
<<square5/square/std//tangentialComponent>>                                                     : err = 0.0e+00
<<square5/square/std//vectorSymmetry>>                                                          : err = 0.0e+00
<<square5/square/std//aDotU>>                                                                   : err = 0.0e+00
<<square5/square/std//generalizedDivergence>>                                                   : err = 0.0e+00
<<square5/square/std//generalMixedDerivative>>                                                  : err = 0.0e+00
<<square5/square/std//extrapInterpNeighbours>>                                                  : err = 0.0e+00
<<square5/square/std//tangentialComponent0>>                                                    : err = 0.0e+00
<<square5/square/std//extrapolate>>                                                             : err = 0.0e+00
<<square5/square/std//extrapolateNormalComponent>>                                              : err = 0.0e+00
<<square5/square/std//extrapolateTangentialComponent0>>                                         : err = 0.0e+00
<<square5/square/std//normalDerivativeOfTangentialComponent0>>                                  : err = 0.0e+00
<<square5/square/std//normalDerivativeOfNormalComponent>>                                       : err = 0.0e+00
<<square5/square/std//finishBC: extrapolate>>                                                   : err = 0.0e+00
<<square5/square/std//finishBC: evenSymmetry>>                                                  : err = 1.2e+00
<<square5/square/std//finishBC: oddSymmetry>>                                                   : err = 0.0e+00
<<square5/square/std//finishBC: taylor2ndOrderEven>>                                            : err = 0.0e+00
<<square5/square/std//finishBC: taylor4thOrderEven>>                                            : err = 0.0e+00
<<cic/square/std//dirichlet>>                                                                   : err = 0.0e+00
<<cic/square/std//neumann>>                                                                     : err = 0.0e+00
<<cic/square/std//mixed (var-coeff)>>                                                           : err = 0.0e+00
<<cic/square/std//mixed1>>                                                                      : err = 0.0e+00
<<cic/square/std//mixed2>>                                                                      : err = 0.0e+00
<<cic/square/con//normalDotScalarGrad>>                                                         : err = 0.0e+00
<<cic/square/std//normalDotScalarGrad>>                                                         : err = 0.0e+00
<<cic/square/std//normalComponent>>                                                             : err = 0.0e+00
<<cic/square/std//tangentialComponent>>                                                         : err = 0.0e+00
<<cic/square/std//vectorSymmetry>>                                                              : err = 0.0e+00
<<cic/square/std//aDotU>>                                                                       : err = 0.0e+00
<<cic/square/std//generalizedDivergence>>                                                       : err = 0.0e+00
<<cic/square/std//generalMixedDerivative>>                                                      : err = 0.0e+00
<<cic/square/std//extrapInterpNeighbours>>                                                      : err = 0.0e+00
<<cic/square/std//tangentialComponent0>>                                                        : err = 0.0e+00
<<cic/square/std//extrapolate>>                                                                 : err = 0.0e+00
<<cic/square/std//extrapolateNormalComponent>>                                                  : err = 0.0e+00
<<cic/square/std//extrapolateTangentialComponent0>>                                             : err = 0.0e+00
<<cic/square/std//normalDerivativeOfTangentialComponent0>>                                      : err = 0.0e+00
<<cic/square/std//normalDerivativeOfNormalComponent>>                                           : err = 0.0e+00
<<cic/square/std//finishBC: extrapolate>>                                                       : err = 0.0e+00
<<cic/square/std//finishBC: evenSymmetry>>                                                      : err = 7.7e-01
<<cic/square/std//finishBC: oddSymmetry>>                                                       : err = 0.0e+00
<<cic/square/std//finishBC: taylor2ndOrderEven>>                                                : err = 0.0e+00
<<cic/square/std//finishBC: taylor4thOrderEven>>                                                : err = 0.0e+00
<<cic/Annulus/std//dirichlet>>                                                                  : err = 0.0e+00
<<cic/Annulus/std//neumann>>                                                                    : err = 0.0e+00
<<cic/Annulus/std//mixed (var-coeff)>>                                                          : err = 0.0e+00
<<cic/Annulus/std//mixed1>>                                                                     : err = 0.0e+00
<<cic/Annulus/std//mixed2>>                                                                     : err = 0.0e+00
<<cic/Annulus/con//normalDotScalarGrad>>                                                        : err = 2.1e-02
<<cic/Annulus/std//normalDotScalarGrad>>                                                        : err = 2.1e-02
<<cic/Annulus/std//normalComponent>>                                                            : err = 0.0e+00
<<cic/Annulus/std//tangentialComponent>>                                                        : err = 0.0e+00
<<cic/Annulus/std//vectorSymmetry>>                                                             : err = 0.0e+00
<<cic/Annulus/std//aDotU>>                                                                      : err = 0.0e+00
<<cic/Annulus/std//generalizedDivergence>>                                                      : err = 0.0e+00
<<cic/Annulus/std//generalMixedDerivative>>                                                     : err = 0.0e+00
<<cic/Annulus/std//extrapInterpNeighbours>>                                                     : err = 0.0e+00
<<cic/Annulus/std//tangentialComponent0>>                                                       : err = 0.0e+00
<<cic/Annulus/std//extrapolate>>                                                                : err = 0.0e+00
<<cic/Annulus/std//extrapolateNormalComponent>>                                                 : err = 0.0e+00
<<cic/Annulus/std//extrapolateTangentialComponent0>>                                            : err = 0.0e+00
<<cic/Annulus/std//normalDerivativeOfTangentialComponent0>>                                     : err = 0.0e+00
<<cic/Annulus/std//normalDerivativeOfNormalComponent>>                                          : err = 0.0e+00
<<cic/Annulus/std//finishBC: extrapolate>>                                                      : err = 0.0e+00
<<cic/Annulus/std//finishBC: evenSymmetry>>                                                     : err = 0.0e+00
<<cic/Annulus/std//finishBC: oddSymmetry>>                                                      : err = 0.0e+00
<<cic/Annulus/std//finishBC: taylor2ndOrderEven>>                                               : err = 0.0e+00
<<cic/Annulus/std//finishBC: taylor4thOrderEven>>                                               : err = 0.0e+00
<<sib/box/std//dirichlet>>                                                                      : err = 0.0e+00
<<sib/box/std//neumann>>                                                                        : err = 0.0e+00
<<sib/box/std//mixed (var-coeff)>>                                                              : err = 0.0e+00
<<sib/box/std//mixed1>>                                                                         : err = 0.0e+00
<<sib/box/std//mixed2>>                                                                         : err = 0.0e+00
<<sib/box/con//normalDotScalarGrad>>                                                            : err = 0.0e+00
<<sib/box/std//normalDotScalarGrad>>                                                            : err = 0.0e+00
<<sib/box/std//normalComponent>>                                                                : err = 0.0e+00
<<sib/box/std//tangentialComponent>>                                                            : err = 0.0e+00
<<sib/box/std//vectorSymmetry>>                                                                 : err = 0.0e+00
<<sib/box/std//aDotU>>                                                                          : err = 0.0e+00
<<sib/box/std//generalizedDivergence>>                                                          : err = 0.0e+00
<<sib/box/std//generalMixedDerivative>>                                                         : err = 0.0e+00
<<sib/box/std//extrapInterpNeighbours>>                                                         : err = 0.0e+00
<<sib/box/std//tangentialComponent0>>                                                           : err = 0.0e+00
<<sib/box/std//tangentialComponent1>>                                                           : err = 0.0e+00
<<sib/box/std//extrapolate>>                                                                    : err = 0.0e+00
<<sib/box/std//extrapolateNormalComponent>>                                                     : err = 0.0e+00
<<sib/box/std//extrapolateTangentialComponent0>>                                                : err = 0.0e+00
<<sib/box/std//extrapolateTangentialComponent1>>                                                : err = 0.0e+00
<<sib/box/std//normalDerivativeOfTangentialComponent0>>                                         : err = 0.0e+00
<<sib/box/std//normalDerivativeOfTangentialComponent1>>                                         : err = 0.0e+00
<<sib/box/std//normalDerivativeOfNormalComponent>>                                              : err = 0.0e+00
<<sib/box/std//finishBC: extrapolate>>                                                          : err = 0.0e+00
<<sib/box/std//finishBC: evenSymmetry>>                                                         : err = 1.4e+00
<<sib/box/std//finishBC: oddSymmetry>>                                                          : err = 0.0e+00
<<sib/box/std//finishBC: taylor2ndOrderEven>>                                                   : err = 0.0e+00
<<sib/box/std//finishBC: taylor4thOrderEven>>                                                   : err = 0.0e+00
<<sib/north-pole/std//dirichlet>>                                                               : err = 0.0e+00
<<sib/north-pole/std//neumann>>                                                                 : err = 0.0e+00
<<sib/north-pole/std//mixed (var-coeff)>>                                                       : err = 0.0e+00
<<sib/north-pole/std//mixed1>>                                                                  : err = 0.0e+00
<<sib/north-pole/std//mixed2>>                                                                  : err = 0.0e+00
<<sib/north-pole/con//normalDotScalarGrad>>                                                     : err = 7.6e-02
<<sib/north-pole/std//normalDotScalarGrad>>                                                     : err = 7.6e-02
<<sib/north-pole/std//normalComponent>>                                                         : err = 0.0e+00
<<sib/north-pole/std//tangentialComponent>>                                                     : err = 0.0e+00
<<sib/north-pole/std//vectorSymmetry>>                                                          : err = 0.0e+00
<<sib/north-pole/std//aDotU>>                                                                   : err = 0.0e+00
<<sib/north-pole/std//generalizedDivergence>>                                                   : err = 0.0e+00
<<sib/north-pole/std//generalMixedDerivative>>                                                  : err = 0.0e+00
<<sib/north-pole/std//extrapInterpNeighbours>>                                                  : err = 0.0e+00
<<sib/north-pole/std//tangentialComponent0>>                                                    : err = 0.0e+00
<<sib/north-pole/std//tangentialComponent1>>                                                    : err = 0.0e+00
<<sib/north-pole/std//extrapolate>>                                                             : err = 0.0e+00
<<sib/north-pole/std//extrapolateNormalComponent>>                                              : err = 0.0e+00
<<sib/north-pole/std//extrapolateTangentialComponent0>>                                         : err = 0.0e+00
<<sib/north-pole/std//extrapolateTangentialComponent1>>                                         : err = 0.0e+00
<<sib/north-pole/std//normalDerivativeOfTangentialComponent0>>                                  : err = 0.0e+00
<<sib/north-pole/std//normalDerivativeOfTangentialComponent1>>                                  : err = 0.0e+00
<<sib/north-pole/std//normalDerivativeOfNormalComponent>>                                       : err = 0.0e+00
<<sib/north-pole/std//finishBC: extrapolate>>                                                   : err = 0.0e+00
<<sib/north-pole/std//finishBC: evenSymmetry>>                                                  : err = 6.3e-01
<<sib/north-pole/std//finishBC: oddSymmetry>>                                                   : err = 1.4e-01
<<sib/north-pole/std//finishBC: taylor2ndOrderEven>>                                            : err = 3.6e-02
<<sib/north-pole/std//finishBC: taylor4thOrderEven>>                                            : err = 1.7e-02
<<sib/south-pole/std//dirichlet>>                                                               : err = 0.0e+00
<<sib/south-pole/std//neumann>>                                                                 : err = 0.0e+00
<<sib/south-pole/std//mixed (var-coeff)>>                                                       : err = 0.0e+00
<<sib/south-pole/std//mixed1>>                                                                  : err = 0.0e+00
<<sib/south-pole/std//mixed2>>                                                                  : err = 0.0e+00
<<sib/south-pole/con//normalDotScalarGrad>>                                                     : err = 7.6e-02
<<sib/south-pole/std//normalDotScalarGrad>>                                                     : err = 7.6e-02
<<sib/south-pole/std//normalComponent>>                                                         : err = 0.0e+00
<<sib/south-pole/std//tangentialComponent>>                                                     : err = 0.0e+00
<<sib/south-pole/std//vectorSymmetry>>                                                          : err = 0.0e+00
<<sib/south-pole/std//aDotU>>                                                                   : err = 0.0e+00
<<sib/south-pole/std//generalizedDivergence>>                                                   : err = 0.0e+00
<<sib/south-pole/std//generalMixedDerivative>>                                                  : err = 0.0e+00
<<sib/south-pole/std//extrapInterpNeighbours>>                                                  : err = 0.0e+00
<<sib/south-pole/std//tangentialComponent0>>                                                    : err = 0.0e+00
<<sib/south-pole/std//tangentialComponent1>>                                                    : err = 0.0e+00
<<sib/south-pole/std//extrapolate>>                                                             : err = 0.0e+00
<<sib/south-pole/std//extrapolateNormalComponent>>                                              : err = 0.0e+00
<<sib/south-pole/std//extrapolateTangentialComponent0>>                                         : err = 0.0e+00
<<sib/south-pole/std//extrapolateTangentialComponent1>>                                         : err = 0.0e+00
<<sib/south-pole/std//normalDerivativeOfTangentialComponent0>>                                  : err = 0.0e+00
<<sib/south-pole/std//normalDerivativeOfTangentialComponent1>>                                  : err = 0.0e+00
<<sib/south-pole/std//normalDerivativeOfNormalComponent>>                                       : err = 0.0e+00
<<sib/south-pole/std//finishBC: extrapolate>>                                                   : err = 0.0e+00
<<sib/south-pole/std//finishBC: evenSymmetry>>                                                  : err = 6.3e-01
<<sib/south-pole/std//finishBC: oddSymmetry>>                                                   : err = 1.4e-01
<<sib/south-pole/std//finishBC: taylor2ndOrderEven>>                                            : err = 3.6e-02
<<sib/south-pole/std//finishBC: taylor4thOrderEven>>                                            : err = 1.7e-02
