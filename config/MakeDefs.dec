# Dec alpha with osf1:

# these next values for compilers will be used unless overridden with an argument to configure
cc = cc
CC = cxx
FC = f77

A++ = $(APlusPlus)
A+++ = $(APlusPlus)
AppLibraries = -rpath $(APlusPlus) -L$(APlusPlus)/lib -lApp -lApp_static
Include=  $(Overture)/include
Lib=      $(Overture)/lib
LibOverture= -lOverture -lOverture_static
LibRapsodi= -lRapsodi -lRapsodi_static 
BOXLIB_DEFS = -DBL_USE_FLOAT

# Here is the rpath command 
OV_RPATH = -rpath

# Here is where we can find the perl include files and library (CORE)
# These will normally be changed by the configure script unless it can't find the location of the perl CORE 
OV_PERL_INCLUDE = /usr/local/lib/perl5/5.6.1/alpha-dec_osf/CORE
OV_PERL_LIB     = /usr/local/lib/perl5/5.6.1/alpha-dec_osf/CORE
# Here are the perl libraries we need to link to
OV_PERL_LIBRARIES = $(OV_RPATH) $(OV_PERL_LIB) -L$(OV_PERL_LIB) -lm -liconv -lutil

# these next values will may be changed by the configure script
C_OPTIMIZATION_FLAG = -O
CPP_OPTIMIZATION_FLAG = -O
FORTRAN_OPTIMIZATION_FLAG = -O

CFLAGS = $(C_OPTIMIZATION_FLAG) -I$(Include) $(OverturePrecision) $(FLAGS) -std1 -DARCH_IEEE 
# flags for c routines we always optimize
CFLAGSO = -O -I$(Include) $(OverturePrecision) $(FLAGS) -std1 -DARCH_IEEE 



# do not include some paths, such as STL in the places searched by makedepend (takes too long)
CC_INCLUDES_FOR_DEPEND =  $(OverturePrecision) -DUSE_MESA -DARCH_IEEE -Olimit 2000 $(FLAGS) -I$(Include) -I$(APlusPlus)/include -I$(OpenGL)/include -I$(XLIBS)/include $(BOXLIB_DEFS) -I$(OV_PERL_INCLUDE)

STL_INCLUDE = 

# kkc flags required for all versions of the compile, put all templates in one place.
CCFLAGS_REQ = -pure_cname -ptr $(Overture)/cxx_repository
CC_INCLUDES = $(CC_FLAGS) $(CC_INCLUDES_FOR_DEPEND) $(STL_INCLUDE) $(CCFLAGS_REQ)

CCFLAGS= $(CC_INCLUDES) $(CPP_OPTIMIZATION_FLAG)

# things that are always compile with optimization use this flag
CCFLAGSO= $(CC_INCLUDES) -O 

# things that are always compile with lots of optimization use this flag
CCFLAGSF= $(CC_INCLUDES) -O

# things that need to be compiled with no optimization use the following
CCFLAGSG= $(CC_INCLUDES) -g 


FFLAGS=   $(FORTRAN_OPTIMIZATION_FLAG) $(FortranDouble) $(OverturePrecision) $(FLAGS)  -I$(Include)
# single precision always:
FFLAGSS= $(OverturePrecision) $(FORTRAN_OPTIMIZATION_FLAG)  $(FLAGS) -I$(Include)

# things that are always compile with optimization use these flags
FFLAGSO= -O $(FF_FLAGS) $(OverturePrecision) $(FortranDouble)  $(FLAGS) -I$(Include)  
FFLAGSSO= -O $(OverturePrecision) $(FF_FLAGS)  $(FLAGS) -I$(Include) 
FFLAGSG = $(FF_FLAGS) $(OverturePrecision) $(FortranDouble) -g $(Include)
FFLAGSG2 = $(FFLAGSG)

# FORTRAN_LIBS = -lfor -lots -lm_4sqrt
FORTRAN_LIBS = -lfor -lots 
LIB_TARGETS= lib_date libso_date
LIB_DEPENDENCIES= ../lib/lib_date 
TEMPLATES= 
RAPTEMPLATES=

# The KCC compiler should be used to build the static library (for templates)
AR = ar
#KCC AR = KCC
ARFLAGS = ruv  
#KCC ARFLAGS = -o 

LD = ld
RANLIB = ranlib
SOFLAGS = -shared -expect_unresolved '*' 
OpenGLibs=
#LDFLAGS = -rpath 
# kkc commented out rpath on dec, it was causing a link time error and
#   did not appear to be needed ( -rpath apparently requires an argument )
# wdh: added back -L (note: cxx automatically uses -rpath when calling ld)
LDFLAGS = -L

GLIBS= $(OV_PERL_LIBRARIES) -rpath $(OpenGL)/lib -L$(OpenGL)/lib $(OpenGLibs) -rpath $(HDF)/lib -L$(HDF)/lib -lmfhdf -ldf -ljpeg -lz  -rpath $(MOTIF)/lib -L$(MOTIF)/lib -lXm -rpath $(XLIBS)/lib -L$(XLIBS)/lib -lXt -lXmu -lXi -lXext -lX11 -lm

#dec FLIBS= -rpath $(Overture)/lib $(LDFLAGS)$(Overture)/lib $(LibOverture) $(HDF_LIBS) $(FORTRAN_LIBS) $(AppLibraries)
